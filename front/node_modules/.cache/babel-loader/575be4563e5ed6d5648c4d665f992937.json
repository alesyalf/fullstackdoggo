{"ast":null,"code":"import _slicedToArray from \"/home/alesya/fullstack_project/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alesya/fullstack_project/front/src/containers/Signup.jsx\";\nimport React, { useState } from \"react\";\nimport { HelpBlock, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Signup.css\";\nexport default function Signup(props) {\n  const _useFormFields = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  }),\n        _useFormFields2 = _slicedToArray(_useFormFields, 2),\n        fields = _useFormFields2[0],\n        handleFieldChange = _useFormFields2[1];\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        newUser = _useState2[0],\n        setNewUser = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword;\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    setNewUser(\"test\");\n    setIsLoading(false);\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n  }\n\n  function renderConfirmationForm() {\n    return React.createElement(\"form\", {\n      onSubmit: handleConfirmationSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"confirmationCode\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Confirmation Code\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"tel\",\n      onChange: handleFieldChange,\n      value: fields.confirmationCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(HelpBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Please check your email for the code.\")), React.createElement(LoaderButton, {\n      block: true,\n      type: \"submit\",\n      bsSize: \"large\",\n      isLoading: isLoading,\n      disabled: !validateConfirmationForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Verify\"));\n  }\n\n  function renderForm() {\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Email\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: fields.email,\n      onChange: handleFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      type: \"password\",\n      value: fields.password,\n      onChange: handleFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"confirmPassword\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(FormControl, {\n      type: \"password\",\n      onChange: handleFieldChange,\n      value: fields.confirmPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(LoaderButton, {\n      block: true,\n      type: \"submit\",\n      bsSize: \"large\",\n      isLoading: isLoading,\n      disabled: !validateForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Signup\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, newUser === null ? renderForm() : renderConfirmationForm());\n}","map":{"version":3,"sources":["/home/alesya/fullstack_project/front/src/containers/Signup.jsx"],"names":["React","useState","HelpBlock","FormGroup","FormControl","ControlLabel","LoaderButton","useFormFields","Signup","props","email","password","confirmPassword","confirmationCode","fields","handleFieldChange","newUser","setNewUser","isLoading","setIsLoading","validateForm","length","validateConfirmationForm","handleSubmit","event","preventDefault","handleConfirmationSubmit","renderConfirmationForm","renderForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    HelpBlock,\n    FormGroup,\n    FormControl,\n    ControlLabel\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Signup.css\";\n\nexport default function Signup(props) {\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        confirmationCode: \"\"\n    });\n    const [newUser, setNewUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    function validateForm() {\n        return (\n            fields.email.length > 0 &&\n            fields.password.length > 0 &&\n            fields.password === fields.confirmPassword\n        );\n    }\n\n    function validateConfirmationForm() {\n        return fields.confirmationCode.length > 0;\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        setIsLoading(true);\n\n        setNewUser(\"test\");\n\n        setIsLoading(false);\n    }\n\n    async function handleConfirmationSubmit(event) {\n        event.preventDefault();\n\n        setIsLoading(true);\n    }\n\n    function renderConfirmationForm() {\n        return (\n            <form onSubmit={handleConfirmationSubmit}>\n                <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n                    <ControlLabel>Confirmation Code</ControlLabel>\n                    <FormControl\n                        autoFocus\n                        type=\"tel\"\n                        onChange={handleFieldChange}\n                        value={fields.confirmationCode}\n                    />\n                    <HelpBlock>Please check your email for the code.</HelpBlock>\n                </FormGroup>\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    bsSize=\"large\"\n                    isLoading={isLoading}\n                    disabled={!validateConfirmationForm()}\n                >\n                    Verify\n                </LoaderButton>\n            </form>\n        );\n    }\n\n    function renderForm() {\n        return (\n            <form onSubmit={handleSubmit}>\n                <FormGroup controlId=\"email\" bsSize=\"large\">\n                    <ControlLabel>Email</ControlLabel>\n                    <FormControl\n                        autoFocus\n                        type=\"email\"\n                        value={fields.email}\n                        onChange={handleFieldChange}\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"password\" bsSize=\"large\">\n                    <ControlLabel>Password</ControlLabel>\n                    <FormControl\n                        type=\"password\"\n                        value={fields.password}\n                        onChange={handleFieldChange}\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n                    <ControlLabel>Confirm Password</ControlLabel>\n                    <FormControl\n                        type=\"password\"\n                        onChange={handleFieldChange}\n                        value={fields.confirmPassword}\n                    />\n                </FormGroup>\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    bsSize=\"large\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                >\n                    Signup\n                </LoaderButton>\n            </form>\n        );\n    }\n\n    return (\n        <div className=\"Signup\">\n            {newUser === null ? renderForm() : renderConfirmationForm()}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}